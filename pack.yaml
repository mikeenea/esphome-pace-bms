binary_sensor:
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Charging Operation"
    address: 11
    register_type: holding
    bitmask: 0x0100

  #      Bit 9: Status: Discharging operation
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Discharging Operation"
    address: 11
    register_type: holding
    bitmask: 0x0200

  #      Bit 10: Status: Charging enabled/disabled
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Charging"
    address: 11
    register_type: holding
    bitmask: 0x0400

  #      Bit 11: Status: Discharging enabled/disabled
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Discharging"
    address: 11
    register_type: holding
    bitmask: 0x0800

sensor:
  # Current 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Current"
    address: 0
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: "A"
    device_class: current
    state_class: measurement
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  # Voltage
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Total Voltage"
    address: 1
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  # Power 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Power"
    address: 0
    register_type: holding
    value_type: U_WORD
    register_count: 2
    response_size: 4
    unit_of_measurement: "W"
    device_class: power
    state_class: measurement
    accuracy_decimals: 2
    lambda: |-
      if (data.size() < 4) {
        return NAN;
      }
      float current = (int16_t)(data[0] << 8 | data[1] << 0);
      float total_voltage = (uint16_t)(data[2] << 8 | data[3] << 0);
      return current * total_voltage * 0.0001f;

  # State of Charge 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} State of Charge"
    address: 2
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "%"
    device_class: battery
    state_class: measurement
    accuracy_decimals: 0

  # State of Health 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} State of Health"
    address: 3
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "%"
    state_class: measurement
    accuracy_decimals: 0

  # Remaining Capacity 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Remaining Capacity"
    address: 4
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "Ah"
    state_class: measurement
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  # Full Capacity 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Full Capacity"
    address: 5
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "Ah"
    state_class: measurement
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  # Design Capacity 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Design Capacity"
    address: 6
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "Ah"
    state_class: measurement
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  # Charging Cycles 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Charging Cycles"
    address: 7
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: ""
    state_class: measurement
    accuracy_decimals: 0

  # Warnings Bitmask 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Warnings Bitmask"
    address: 9
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: ""
    state_class: measurement
    accuracy_decimals: 0

  # Protections Bitmask 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Protections Bitmask"
    address: 10
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: ""
    state_class: measurement
    accuracy_decimals: 0

  # Fault Status Bitmask 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Fault Status Bitmask"
    address: 11
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: ""
    state_class: measurement
    accuracy_decimals: 0

  # Balancer Status 
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Balancer Status"
    address: 12
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: ""
    state_class: measurement
    accuracy_decimals: 0

  #  13  Reserved
  #  14  Reserved

  # Cell voltage 1
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Voltage 1"
    address: 15
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # Cell voltage 2
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Voltage 2"
    address: 16
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # Cell voltage 3
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Voltage 3"
    address: 17
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # Cell voltage 4
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Voltage 4"
    address: 18
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # Cell voltage 5
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Voltage 5"
    address: 19
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # Cell voltage 6
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Voltage 6"
    address: 20
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # Cell voltage 7
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Voltage 7"
    address: 21
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # Cell voltage 8
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Voltage 8"
    address: 22
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # Cell voltage 9
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Voltage 9"
    address: 23
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # Cell voltage 10
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Voltage 10"
    address: 24
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # Cell voltage 11
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Voltage 11"
    address: 25
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # Cell voltage 12
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Voltage 12"
    address: 26
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # Cell voltage 13
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Voltage 13"
    address: 27
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # Cell voltage 14
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Voltage 14"
    address: 28
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # Cell voltage 15
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Voltage 15"
    address: 29
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  # Cell voltage 16
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Voltage 16"
    address: 30
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: "V"
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  ### Calculated sensors

  # Delta cell voltage
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Delta Cell Voltage"
    address: 15
    register_type: holding
    value_type: U_WORD
    register_count: 16
    response_size: 32
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    lambda: |-
      uint8_t cells = 16;
      if (data.size() < cells * 2) {
        return NAN;
      }

      float min_cell_voltage = 100.0f;
      float max_cell_voltage = -100.0f;
      float average_cell_voltage = 0.0f;
      uint8_t min_voltage_cell = 0;
      uint8_t max_voltage_cell = 0;
      for (uint8_t i = 0; i < cells; i++) {
        float cell_voltage = (uint16_t)(data[item->offset + (i * 2)] << 8 | data[item->offset + (i * 2) + 1] << 0) * 0.001f;
        average_cell_voltage += cell_voltage;
        if (cell_voltage < min_cell_voltage) {
            min_cell_voltage = cell_voltage;
            min_voltage_cell = i + 1;
        }
        if (cell_voltage > max_cell_voltage) {
          max_cell_voltage = cell_voltage;
          max_voltage_cell = i + 1;
        }
      }
      average_cell_voltage /= cells;

      id(${modbus_controller_id}_average_cell_voltage).publish_state(average_cell_voltage);
      id(${modbus_controller_id}_min_cell_voltage).publish_state(min_cell_voltage);
      id(${modbus_controller_id}_max_cell_voltage).publish_state(max_cell_voltage);
      id(${modbus_controller_id}_min_voltage_cell).publish_state(min_voltage_cell);
      id(${modbus_controller_id}_max_voltage_cell).publish_state(max_voltage_cell);

      return max_cell_voltage - min_cell_voltage;

  # Template sensor for average cell voltage
  - platform: template
    id: ${modbus_controller_id}_average_cell_voltage
    name: "${friendly_name} ${pack} Average Cell Voltage"
    update_interval: never
    unit_of_measurement: V
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3

  # Template sensor for min cell voltage
  - platform: template
    id: ${modbus_controller_id}_min_cell_voltage
    name: "${friendly_name} ${pack} Min Cell Voltage"
    update_interval: never
    unit_of_measurement: V
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3

  # Template sensor for max cell voltage
  - platform: template
    id: ${modbus_controller_id}_max_cell_voltage
    name: "${friendly_name} ${pack} Max Cell Voltage"
    update_interval: never
    unit_of_measurement: V
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3

  # Template sensor for min voltage cell index
  - platform: template
    id: ${modbus_controller_id}_min_voltage_cell
    name: "${friendly_name} ${pack} Min Voltage Cell"
    update_interval: never
    unit_of_measurement: ""
    state_class: measurement
    accuracy_decimals: 0

  # Template sensor for max voltage cell index
  - platform: template
    id: ${modbus_controller_id}_max_voltage_cell
    name: "${friendly_name} ${pack} Max Voltage Cell"
    update_interval: never
    unit_of_measurement: ""
    state_class: measurement
    accuracy_decimals: 0

  ####

  ### Temperatures for 

  # 31  Battery temperature 1 (0.1 ℃ resolution)
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Battery Temperature 1"
    address: 31
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: "˚C"
    device_class: temperature
    state_class: measurement
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  # 32  Battery temperature 2 (0.1 ℃ resolution)
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Battery Temperature 2"
    address: 32
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: "˚C"
    device_class: temperature
    state_class: measurement
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  # 33  Battery temperature 3 (0.1 ℃ resolution)
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Battery Temperature 3"
    address: 33
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: "˚C"
    device_class: temperature
    state_class: measurement
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  # 34  Battery temperature 4 (0.1 ℃ resolution)
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Battery Temperature 4"
    address: 34
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: "˚C"
    device_class: temperature
    state_class: measurement
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  # 35  MOSFET temperature (0.1 ℃ or invalid)
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} MOSFET Temperature"
    address: 35
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: "˚C"
    device_class: temperature
    state_class: measurement
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  # 36  Environment temperature (0.1 ℃ or invalid)
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Environment Temperature"
    address: 36
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: "˚C"
    device_class: temperature
    state_class: measurement
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  #  37-59  Reserved

number:
  #  105  Balance Start Cell Voltage            2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Balance Start Cell Voltage"
    use_write_multiple: true
    address: 105
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: "mV"

  #  106  Balance Start Delta Voltage           2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Balance Start Delta Voltage"
    use_write_multiple: true
    address: 106
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: "mV"

  #  107   Full-Charge Voltage              2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} ${pack} Full-Charge Voltage"
    use_write_multiple: true
    address: 107
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: "mV"

  #  108   Full-Charge Current              2 byte  RW  uint16  mA
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Pack Full-Charge Current"
    use_write_multiple: true
    address: 108
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: "mA"

  #  109  Cell Sleep Voltage                    2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Sleep Voltage"
    use_write_multiple: true
    address: 109
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: "mV"

  #  110  Cell Sleep Delay Time                 2 byte  RW  uint16  min
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Cell Sleep Delay Time"
    use_write_multiple: true
    address: 110
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: "min"

text_sensor:

  # 150  Version information                  20 byte   R  uint16  ASCII
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Version Information"
    skip_updates: 60
    address: 150
    register_type: holding
    register_count: 10
    response_size: 20

  # 160  Model SN                             20 byte  RW  uint16  ASCII BMS Manufacturer
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} BMS Serial Number"
    skip_updates: 60
    address: 160
    register_type: holding
    register_count: 10
    response_size: 20

  # 170  PACK SN                              20 byte  RW  uint16  ASCII PACK Manufacturer
  - platform: modbus_controller
    modbus_controller_id: ${modbus_controller_id}
    name: "${friendly_name} ${pack} Battery Serial Number"
    skip_updates: 60
    address: 170
    register_type: holding
    register_count: 10
    response_size: 20